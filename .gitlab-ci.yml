image: debian:12

stages:
  - build
  - upload
  - release
  - docker

variables:
  ARTIFACT_URL: "/builds/${CI_PROJECT_PATH}"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/nebula-atom"
  DOCKER_LATEST: $CI_REGISTRY_IMAGE/nebulaatom:latest
  DOCKER_TAG: $CI_REGISTRY_IMAGE/nebulaatom:$CI_COMMIT_TAG

build:
  stage: build
  before_script:
    - apt-get update && apt-get install -y
      make
      binutils
      g++
      git
      cmake
      libssl-dev
      libpoco-dev
      libmariadb-dev
      libyaml-cpp-dev
  script:
    - mkdir build && cd build
    - cmake ../ -DCMAKE_BUILD_TYPE=release && cmake --build .
    - cmake --build . --target install
    - cpack --config CPackSourceConfig.cmake && cpack --config CPackConfig.cmake
  artifacts:
    paths:
      - build/cpack/libnebulaatom-*-Linux.deb
      - version.txt

upload:
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      cd ${ARTIFACT_URL} && export VERSION=$(cat version.txt)
    - |
      cd ${ARTIFACT_URL}/build/cpack && echo libnebulaatom-*-Linux.deb > filename && export LINUX_DEB_FILE=$(cat filename)
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
      --upload-file ${ARTIFACT_URL}/build/cpack/$LINUX_DEB_FILE \
      ${PACKAGE_REGISTRY_URL}/$VERSION/$LINUX_DEB_FILE

release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      cd ${ARTIFACT_URL} && export VERSION=$(cat version.txt)
    - |
      cd ${ARTIFACT_URL}/build/cpack && echo libnebulaatom-*-Linux.deb > filename && export LINUX_DEB_FILE=$(cat filename)
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${LINUX_DEB_FILE}\",\"url\":\"${PACKAGE_REGISTRY_URL}/$VERSION/$LINUX_DEB_FILE\"}"

docker:
  image: docker:latest
  stage: docker
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - docker build -t $DOCKER_TAG -t $DOCKER_LATEST .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $DOCKER_TAG
    - docker push $DOCKER_LATEST
