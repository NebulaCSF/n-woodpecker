image: debian:12

stages:
  - build
  - upload
  - release

variables:
  NUM_TAG: ${CI_COMMIT_TAG:1}
  LINUX_DEB_FILE: "nebula-atom-${NUM_TAG}-Linux.deb"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/nebula-atom/${CI_COMMIT_TAG}"

build:
  stage: build
  before_script:
    - apt-get update && apt-get install -y
      make
      binutils
      g++
      git
      cmake
      libssl-dev
      libpoco-dev
      libmariadb-dev
      libyaml-cpp-dev
  script:
    - mkdir build && cd build
    - cmake ../ -DCMAKE_BUILD_TYPE=release && cmake --build .
    - cmake --build . --target install
    - cpack --config CPackSourceConfig.cmake && cpack --config CPackConfig.cmake
  artifacts:
    paths:
      - build/cpack


upload:
  stage: upload
  image: curlimages/curl:latest
  only:
    - merge_requests:
      - source_branch: dev
      - target_branch: master
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/cpack/${LINUX_DEB_FILE} ${PACKAGE_REGISTRY_URL}/${LINUX_DEB_FILE}

release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  only:
    - merge_requests:
      - source_branch: dev
      - target_branch: master
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${LINUX_DEB_FILE}\",\"url\":\"${PACKAGE_REGISTRY_URL}/${LINUX_DEB_FILE}\"}"

